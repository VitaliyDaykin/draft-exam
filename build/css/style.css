a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-collapse:collapse;border-spacing:0}html{line-height:1.15}body{margin:0}main{display:block}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}@font-face{font-family:PT Sans;font-style:normal;font-weight:400;src:url(../fonts/pt-sans-v12-latin-regular.woff2) format("woff2"),url(../fonts/pt-sans-v12-latin-regular.woff) format("woff")}@font-face{font-family:PT Sans;font-style:normal;font-weight:700;src:url(../fonts/pt-sans-v12-latin-700.woff2) format("woff2"),url(../fonts/pt-sans-v12-latin-700.woff) format("woff")}@font-face{font-family:PT Sans;font-style:normal;font-weight:400;src:url(../fonts/pt-sans-v12-latin-italic.woff2) format("woff2"),url(../fonts/pt-sans-v12-latin-italic.woff) format("woff")}@font-face{font-family:Proxima Nova;font-style:normal;font-weight:700;src:url(../fonts/ProximaNova-Bold.woff2) format("woff2"),url(../fonts/ProximaNova-Bold.woff) format("woff")}@font-face{font-family:Proxima Nova;font-style:normal;font-weight:600;src:url(../fonts/ProximaNova-Semibold.woff2) format("woff2"),url(../fonts/ProximaNova-Semibold.woff) format("woff")}.page{font-family:PT Sans,Arial,Helvetica,sans-serif;font-size:18px;font-weight:300;line-height:1.625;color:#665f60;background-color:#fff}.title{color:#fefefb;font-size:36px;font-family:Proxima Nova,Arial,Helvetica,sans-serif;font-weight:600;text-transform:uppercase}.title__h1{font-size:72px;font-weight:700}.subtitle{font-family:PT Sans,Arial,Helvetica,sans-serif;font-size:30px;color:#fefefb;font-weight:400;font-style:italic;line-height:1}.header{position:fixed;width:100%;padding:36px 0;-ms-flex-align:center;align-items:center}.logo__img{display:block}.menu__list{display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:flex-end}@media screen and (max-width:992px){.menu__list{display:none}}.menu__item:not(:first-child):not(:last-child){padding:0 28px}.menu__link{counter-reset:#fff;font-size:24px;text-transform:uppercase;text-decoration:none;color:#fff;font-family:Proxima Nova,Arial,Helvetica,sans-serif;font-weight:600}.menu-burger-btn{display:none;width:30px}.menu-burger-btn:after,.menu-burger-btn:before,.menu-burger-btn span{background:#fff;content:"";display:block;height:3px;border-radius:3px;margin:7px 0;transition:.5s}.menu-burger-btn:hover:before{transform:translateY(10px) rotate(135deg)}.menu-burger-btn:hover:after{transform:translateY(-10px) rotate(-135deg)}.menu-burger-btn:hover span{transform:scale(0)}@media screen and (max-width:992px){.menu-burger-btn{display:block}}.main__title-block{background-image:url(../image/title.png);background-repeat:no-repeat;background-size:cover;height:100vh;min-height:550px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.title-block__wrapp{margin:0 auto}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
